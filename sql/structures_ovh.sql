-- MySQL Script generated by MySQL Workbench
-- Mon Sep  7 16:27:54 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

USE `florianlnfleb`;
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `token` ;
DROP TABLE IF EXISTS `comment` ;
DROP TABLE IF EXISTS `post` ;
DROP TABLE IF EXISTS `user` ;

CREATE TABLE IF NOT EXISTS `user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `pseudo` VARCHAR(45) NOT NULL,
  `mail_address` VARCHAR(45) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `active` TINYINT(4) NOT NULL,
  `creation_date` DATETIME NOT NULL,
  `type` INT(11) NOT NULL,
  `modification_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `post`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `post` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `content` LONGTEXT NOT NULL,
  `creation_date` DATETIME NOT NULL,
  `author` INT(11) NOT NULL,
  `chapo` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `modification_date` DATETIME NOT NULL,
  `picture` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `post_auteur_idx` (`author` ASC),
  CONSTRAINT `post_auteur`
    FOREIGN KEY (`author`)
    REFERENCES `user` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 29
DEFAULT CHARACTER SET = utf8;

-- -----------------------------------------------------
-- Table `comment`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `comment` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `content` LONGTEXT NOT NULL,
  `isValid` TINYINT(1) NOT NULL,
  `author` INT(11) NOT NULL,
  `creation_date` DATETIME NOT NULL,
  `validation_date` DATETIME NULL DEFAULT NULL,
  `validator` INT(11) NULL DEFAULT NULL,
  `post` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `commentaire_validateur_idx` (`validator` ASC),
  INDEX `commentaire_auteur_idx` (`author` ASC),
  INDEX `commentaire_post_idx` (`post` ASC),
  CONSTRAINT `commentaire_auteur`
    FOREIGN KEY (`author`)
    REFERENCES `user` (`id`),
  CONSTRAINT `commentaire_post`
    FOREIGN KEY (`post`)
    REFERENCES `post` (`id`),
  CONSTRAINT `commentaire_validateur`
    FOREIGN KEY (`validator`)
    REFERENCES `user` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 23
DEFAULT CHARACTER SET = utf8;




-- -----------------------------------------------------
-- Table `token`
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS `token` (
  `value` VARCHAR(64) NOT NULL,
  `user` INT(11) NOT NULL,
  `generation_date` DATETIME NOT NULL,
  `expiration_date` DATETIME NOT NULL,
  PRIMARY KEY (`value`),
  UNIQUE INDEX `value_UNIQUE` (`value` ASC),
  INDEX `token_user_idx` (`user` ASC),
  CONSTRAINT `token_user`
    FOREIGN KEY (`user`)
    REFERENCES `user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;



DELIMITER $$

DROP TRIGGER IF EXISTS `comment_BEFORE_INSERT` $$
CREATE
TRIGGER `comment_BEFORE_INSERT`
BEFORE INSERT ON `comment`
FOR EACH ROW
BEGIN
    SET NEW.creation_date := SYSDATE();
END$$


DROP TRIGGER IF EXISTS `comment_BEFORE_UPDATE` $$
CREATE
TRIGGER `comment_BEFORE_UPDATE`
BEFORE UPDATE ON `comment`
FOR EACH ROW
BEGIN
	SET NEW.creation_date := OLD.creation_date;
    IF OLD.isvalid = 0 AND NEW.isValid = 1
    THEN
		SET NEW.validation_date := SYSDATE();
    END IF;
END$$


DROP TRIGGER IF EXISTS `post_BEFORE_INSERT` $$
CREATE
TRIGGER `post_BEFORE_INSERT`
BEFORE INSERT ON `post`
FOR EACH ROW
BEGIN
    SET NEW.creation_date := SYSDATE();
    SET NEW.modification_date := NEW.creation_date;
END$$


DROP TRIGGER IF EXISTS `post_BEFORE_UPDATE` $$
CREATE
TRIGGER `post_BEFORE_UPDATE`
BEFORE UPDATE ON `post`
FOR EACH ROW
BEGIN
	SET NEW.creation_date := OLD.creation_date;
    SET NEW.modification_date := SYSDATE();
END$$


DROP TRIGGER IF EXISTS `user_BEFORE_INSERT` $$
CREATE
TRIGGER `user_BEFORE_INSERT`
BEFORE INSERT ON `user`
FOR EACH ROW
BEGIN
	SET NEW.creation_date := SYSDATE();
    SET NEW.modification_date := NEW.creation_date;
    SET NEW.active := 1;
    SET NEW.type := 1;
END$$


DROP TRIGGER IF EXISTS `user_BEFORE_UPDATE` $$
CREATE
TRIGGER `user_BEFORE_UPDATE`
BEFORE UPDATE ON `user`
FOR EACH ROW
BEGIN
	SET NEW.creation_date := OLD.creation_date;
    SET NEW.modification_date := SYSDATE();
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
