; Database parameters
[database]
host     = "localhost"
port     = "3306"
dbname   = "blog"
username = "root"
password = ""

; Templates parameters
[templates]
directory = "../templates"

; Application parameters
[application]
imagePath = "../public/images"

; Routages declaration
;
; route_name[controller] : Controller to call without "Controller" suffix (ie : "Comment" => CommentController)
; route_name[method]	 : Controller method to call
; route_name[type]		 : Request type (get/post)
; route_name[url]		 : URL for this route (ie : "/home")
; "route_name" is name used in view for calling redirections
;
[routes]
; Admin page declaration
admin_page[controller]                 = 'Admin'
admin_page[method]                     = 'display'
admin_page[type]                       = 'get'
admin_page[url]                        = '/admin'

; Adding comment request declaration
comment_add_request[controller]        = 'Comment'
comment_add_request[method]            = 'add'
comment_add_request[type]              = 'post'
comment_add_request[url]               = '/posts/:id/addComment'

; Comment invalidation request declaration
comment_invalidate_request[controller] = 'Comment'
comment_invalidate_request[method]     = 'invalidate'
comment_invalidate_request[type]       = 'post'
comment_invalidate_request[url]        = '/comments/:id/invalidate'

; Comment remove reques declaration
comment_remove_request[controller]     = 'Comment'
comment_remove_request[method]         = 'remove'
comment_remove_request[type]           = 'post'
comment_remove_request[url]            = '/comments/:id/remove'

; Comment validation request declaration
comment_validate_request[controller]   = 'Comment'
comment_validate_request[method]       = 'validate'
comment_validate_request[type]         = 'post'
comment_validate_request[url]          = '/comments/:id/validate'

; Error page declaration
error_page[controller] 					= 'Error'
error_page[method]     					= 'display'
error_page[type]       					= 'get'
error_page[url]        					= '/error/:errorNumber'

; Home page declaration					
home_page[controller]  					= 'Home'
home_page[method]      					= 'display'
home_page[type]        					= 'get'
home_page[url]         					= '/'

; Login page declaration
login_page[controller]                 = 'Login'
login_page[method]                     = 'display'
login_page[type]                       = 'get'
login_page[url]                        = '/login'

; Login request declaration
login_request[controller]              = 'Login'
login_request[method]                  = 'login'
login_request[type]                    = 'post'
login_request[url]                     = '/login'

; Logout page declaration
logout_page[controller]                = 'Login'
logout_page[method]                    = 'logout'
logout_page[type]                      = 'get'
logout_page[url]                       = '/logout'

; Adding post page declaration
post_add_page[controller]              = 'Post'
post_add_page[method]                  = 'add'
post_add_page[type]                    = 'get'
post_add_page[url]                     = '/posts/add'

; Adding post request declaration
post_add_request[controller]           = 'Post'
post_add_request[method]               = 'add'
post_add_request[type]                 = 'post'
post_add_request[url]                  = '/posts/add'

; Edit post page declaration
post_edit_page[controller]             = 'Post'
post_edit_page[method]                 = 'edit'
post_edit_page[type]                   = 'get'
post_edit_page[url]                    = '/posts/:id/edit'

; Edit post request declaration
post_edit_request[controller]          = 'Post'
post_edit_request[method]              = 'edit'
post_edit_request[type]                = 'post'
post_edit_request[url]                 = '/posts/:postId/edit'

; Post page declaration
post_page[controller]                  = 'Post'
post_page[method]                      = 'display'
post_page[type]                        = 'get'
post_page[url]                         = '/posts/:id'

; Post remove request declaration
post_remove_request[controller]        = 'Post'
post_remove_request[method]            = 'remove'
post_remove_request[type]              = 'post'
post_remove_request[url]               = '/posts/:id/remove'

; Register page declaration
register_page[controller]              = 'Register'
register_page[method]                  = 'display'
register_page[type]                    = 'get'
register_page[url]                     = '/register'

; Register request declaration
register_request[controller]           = 'Register'
register_request[method]               = 'display'
register_request[type]                 = 'post'
register_request[url]                  = '/register'


;
;	Redirection on exception declaration
;	Associating exception name (without exception suffix) to a route.
;	ie : 
;	error[ExpiredSession] = login_page => On session expiration, route to login page 
[redirection_on_error]
;
;
error[ExpiredSession]   = 'home_page'
error[ExpiredToken]     = 'error_page'
error[FileNotFound]     = 'error_page'
error[FileNotValid]     = 'error_page'
error[RouteNotFound]    = 'home_page'
error[UserNotConnected] = 'login_page'
error[ValueNotExists]   = 'error_page'
error[ViewNotFound]     = 'home_page'